Resources:
  cdkVpc3BDA7A91:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: edx-build-aws-vpc
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/Resource
  cdkVpcPublicSubnet1SubnetF181ADCD:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.0.0/18
      VpcId:
        Ref: cdkVpc3BDA7A91
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: CdkWorkshopStack/cdk-Vpc/PublicSubnet1
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PublicSubnet1/Subnet
  cdkVpcPublicSubnet1RouteTableE7BE3526:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: cdkVpc3BDA7A91
      Tags:
        - Key: Name
          Value: CdkWorkshopStack/cdk-Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PublicSubnet1/RouteTable
  cdkVpcPublicSubnet1RouteTableAssociationC2EE9BF9:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: cdkVpcPublicSubnet1RouteTableE7BE3526
      SubnetId:
        Ref: cdkVpcPublicSubnet1SubnetF181ADCD
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PublicSubnet1/RouteTableAssociation
  cdkVpcPublicSubnet1DefaultRouteA7225B45:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: cdkVpcPublicSubnet1RouteTableE7BE3526
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: cdkVpcIGW472C7F82
    DependsOn:
      - cdkVpcVPCGW3EC4BD15
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PublicSubnet1/DefaultRoute
  cdkVpcPublicSubnet1EIP28F7F9E9:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PublicSubnet1/EIP
  cdkVpcPublicSubnet1NATGateway368C662B:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - cdkVpcPublicSubnet1EIP28F7F9E9
          - AllocationId
      SubnetId:
        Ref: cdkVpcPublicSubnet1SubnetF181ADCD
      Tags:
        - Key: Name
          Value: CdkWorkshopStack/cdk-Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PublicSubnet1/NATGateway
  cdkVpcPublicSubnet2SubnetE7679A92:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.64.0/18
      VpcId:
        Ref: cdkVpc3BDA7A91
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: CdkWorkshopStack/cdk-Vpc/PublicSubnet2
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PublicSubnet2/Subnet
  cdkVpcPublicSubnet2RouteTableE444FB53:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: cdkVpc3BDA7A91
      Tags:
        - Key: Name
          Value: CdkWorkshopStack/cdk-Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PublicSubnet2/RouteTable
  cdkVpcPublicSubnet2RouteTableAssociation1CD0AFB5:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: cdkVpcPublicSubnet2RouteTableE444FB53
      SubnetId:
        Ref: cdkVpcPublicSubnet2SubnetE7679A92
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PublicSubnet2/RouteTableAssociation
  cdkVpcPublicSubnet2DefaultRoute40424CB5:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: cdkVpcPublicSubnet2RouteTableE444FB53
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: cdkVpcIGW472C7F82
    DependsOn:
      - cdkVpcVPCGW3EC4BD15
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PublicSubnet2/DefaultRoute
  cdkVpcPublicSubnet2EIP1474AB9C:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PublicSubnet2/EIP
  cdkVpcPublicSubnet2NATGatewayC198035B:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - cdkVpcPublicSubnet2EIP1474AB9C
          - AllocationId
      SubnetId:
        Ref: cdkVpcPublicSubnet2SubnetE7679A92
      Tags:
        - Key: Name
          Value: CdkWorkshopStack/cdk-Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PublicSubnet2/NATGateway
  cdkVpcPrivateSubnet1Subnet8D5CB815:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.128.0/18
      VpcId:
        Ref: cdkVpc3BDA7A91
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: CdkWorkshopStack/cdk-Vpc/PrivateSubnet1
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PrivateSubnet1/Subnet
  cdkVpcPrivateSubnet1RouteTableD2AEC80C:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: cdkVpc3BDA7A91
      Tags:
        - Key: Name
          Value: CdkWorkshopStack/cdk-Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PrivateSubnet1/RouteTable
  cdkVpcPrivateSubnet1RouteTableAssociationE71FC566:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: cdkVpcPrivateSubnet1RouteTableD2AEC80C
      SubnetId:
        Ref: cdkVpcPrivateSubnet1Subnet8D5CB815
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PrivateSubnet1/RouteTableAssociation
  cdkVpcPrivateSubnet1DefaultRouteBD643C04:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: cdkVpcPrivateSubnet1RouteTableD2AEC80C
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: cdkVpcPublicSubnet1NATGateway368C662B
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PrivateSubnet1/DefaultRoute
  cdkVpcPrivateSubnet2SubnetEC372B2E:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.192.0/18
      VpcId:
        Ref: cdkVpc3BDA7A91
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: CdkWorkshopStack/cdk-Vpc/PrivateSubnet2
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PrivateSubnet2/Subnet
  cdkVpcPrivateSubnet2RouteTable61D0FDE8:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: cdkVpc3BDA7A91
      Tags:
        - Key: Name
          Value: CdkWorkshopStack/cdk-Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PrivateSubnet2/RouteTable
  cdkVpcPrivateSubnet2RouteTableAssociation830A8597:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: cdkVpcPrivateSubnet2RouteTable61D0FDE8
      SubnetId:
        Ref: cdkVpcPrivateSubnet2SubnetEC372B2E
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PrivateSubnet2/RouteTableAssociation
  cdkVpcPrivateSubnet2DefaultRoute61D185DE:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: cdkVpcPrivateSubnet2RouteTable61D0FDE8
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: cdkVpcPublicSubnet2NATGatewayC198035B
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/PrivateSubnet2/DefaultRoute
  cdkVpcIGW472C7F82:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: edx-build-aws-vpc
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/IGW
  cdkVpcVPCGW3EC4BD15:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: cdkVpc3BDA7A91
      InternetGatewayId:
        Ref: cdkVpcIGW472C7F82
    Metadata:
      aws:cdk:path: CdkWorkshopStack/cdk-Vpc/VPCGW
  edxec2sgB3E5891F:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow 8080 access to ec2 instances
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow inbound 8080 port
          FromPort: 8080
          IpProtocol: tcp
          ToPort: 8080
      VpcId:
        Ref: cdkVpc3BDA7A91
    Metadata:
      aws:cdk:path: CdkWorkshopStack/edx-ec2-sg/Resource
  edxec2instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.micro
      Monitoring: false
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet:
            - Fn::GetAtt:
                - edxec2sgB3E5891F
                - GroupId
          SubnetId:
            Ref: cdkVpcPublicSubnet1SubnetF181ADCD
      Tags:
        - Key: Name
          Value: edx-instance
      UserData:
        Fn::Base64: >-
          #!/bin/bash

          /opt/aws/bin/cfn-init

          --region us-west-2

          --stack CdkWorkshopStack

          --resource edxec2instance

          sudo yum install python37 -y     curl -O https://bootstrap.pypa.io/get-pip.py     python3 get-pip.py --user     wget https://s3-us-west-2.amazonaws.com/us-west-2-tcdev/courses/AWS-100-ADG/v1.1.0/exercises/ex-rekognition.zip     unzip ex-rekognition.zip     cd exercise-rekognition/FlaskApp     python3 -m venv venv     source venv/bin/activate     pip install boto3     pip install -r requirement.txt     pip install Pillow     python3 application.py
    Metadata:
      aws:cdk:path: CdkWorkshopStack/edx-ec2-instance
      AWS::CloudFormation::Init:
        config:
          commands:
            test:
              command: echo $STACK_NAME test
              env:
                STACK_NAME: CdkWorkshopStack
  edxbuildawss3Key1E5DD9BB:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Statement:
          - Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
              - kms:GenerateDataKey
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
            Resource: "*"
        Version: "2012-10-17"
      Description: Created by CdkWorkshopStack/edx-build-aws-s3
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CdkWorkshopStack/edx-build-aws-s3/Key/Resource
  edxbuildawss39543392C:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:
                Fn::GetAtt:
                  - edxbuildawss3Key1E5DD9BB
                  - Arn
              SSEAlgorithm: aws:kms
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CdkWorkshopStack/edx-build-aws-s3/Resource
  edxProjectUserBC265898:
    Type: AWS::IAM::User
    Properties:
      Groups:
        - Ref: Developers95C0CB5E
      LoginProfile:
        Password: "1234"
    Metadata:
      aws:cdk:path: CdkWorkshopStack/edxProjectUser/Resource
  Developers95C0CB5E:
    Type: AWS::IAM::Group
    Metadata:
      aws:cdk:path: CdkWorkshopStack/Developers/Resource
  DevelopersDefaultPolicy57B1D584:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - iam:*
              - rds:*
              - sns:*
              - cloudformation:*
              - rekognition:*
              - ec2:*
              - cognito-idp:*
              - sqs:*
              - xray:*
              - s3:*
              - elasticloadbalancing:*
              - cloud9:*
              - lambda:*
              - tag:GetResources
              - logs:*
              - kms:ListKeyPolicies
              - kms:GenerateRandom
              - kms:ListRetirableGrants
              - kms:GetKeyPolicy
              - kms:ListResourceTags
              - kms:ReEncryptFrom
              - kms:ListGrants
              - kms:GetParametersForImport
              - kms:ListKeys
              - kms:GetKeyRotationStatus
              - kms:ListAliases
              - kms:ReEncryptTo
              - kms:DescribeKey
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: DevelopersDefaultPolicy57B1D584
      Groups:
        - Ref: Developers95C0CB5E
    Metadata:
      aws:cdk:path: CdkWorkshopStack/Developers/DefaultPolicy/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.12.0,@aws-cdk/aws-cloudwatch=1.15.0,@aws-cdk/aws-ec2=1.15.0,@aws-cdk/aws-events=1.15.0,@aws-cdk/aws-iam=1.15.0,@aws-cdk/aws-kms=1.15.0,@aws-cdk/aws-s3=1.15.0,@aws-cdk/aws-ssm=1.15.0,@aws-cdk/core=1.15.0,@aws-cdk/cx-api=1.15.0,@aws-cdk/region-info=1.15.0,jsii-runtime=node.js/v10.16.3
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

